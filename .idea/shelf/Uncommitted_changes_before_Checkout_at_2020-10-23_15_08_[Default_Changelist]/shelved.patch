Index: src/test/java/inte/grupp5/item/ChestTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package inte.grupp5.item;\r\n\r\nimport inte.grupp5.player.Player;\r\nimport inte.grupp5.player.classes.Mage;\r\nimport inte.grupp5.player.classes.Paladin;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\n// TODO: Since Player only has one Class (klass),\r\n//  only chests for Mages can be tested.\r\npublic class ChestTest {\r\n\r\n    Mage MAGE = new Mage(\"Gandalf\");\r\n    Paladin PALADIN = new Paladin(\"Paladin\");\r\n\r\n    Player LEVEL_5_MAGE = new Player(\"Level 5\", MAGE, 5);\r\n    Player LEVEL_15_MAGE = new Player(\"Level 15\", MAGE, 15);\r\n    Player LEVEL_25_MAGE = new Player(\"Level 25\", MAGE, 25);\r\n    Player LEVEL_35_MAGE = new Player(\"Level 35\", MAGE, 35);\r\n    Player LEVEL_45_MAGE = new Player(\"Level 45\", MAGE, 45);\r\n    Player LEVEL_55_MAGE = new Player(\"Level 55\", MAGE, 55);\r\n    Player LEVEL_60_MAGE = new Player(\"Level 60\", MAGE, 60);\r\n\r\n    Player LEVEL_5_PALADIN = new Player(\"Level 5\", PALADIN, 5);\r\n    Player LEVEL_15_PALADIN = new Player(\"Level 15\", PALADIN, 15);\r\n    Player LEVEL_25_PALADIN = new Player(\"Level 25\", PALADIN, 25);\r\n    Player LEVEL_35_PALADIN = new Player(\"Level 35\", PALADIN, 35);\r\n    Player LEVEL_45_PALADIN = new Player(\"Level 45\", PALADIN, 45);\r\n    Player LEVEL_55_PALADIN = new Player(\"Level 55\", PALADIN, 55);\r\n    Player LEVEL_60_PALADIN = new Player(\"Level 60\", PALADIN, 60);\r\n\r\n    Chest LEVEL_5_MAGE_CHEST = new Chest();\r\n    Chest LEVEL_15_MAGE_CHEST = new Chest();\r\n    Chest LEVEL_25_MAGE_CHEST = new Chest();\r\n    Chest LEVEL_35_MAGE_CHEST = new Chest();\r\n    Chest LEVEL_45_MAGE_CHEST = new Chest();\r\n    Chest LEVEL_55_MAGE_CHEST = new Chest();\r\n    Chest LEVEL_60_MAGE_CHEST = new Chest();\r\n\r\n    Chest LEVEL_5_PALADIN_CHEST = new Chest();\r\n    Chest LEVEL_15_PALADIN_CHEST = new Chest();\r\n    Chest LEVEL_25_PALADIN_CHEST = new Chest();\r\n    Chest LEVEL_35_PALADIN_CHEST = new Chest();\r\n    Chest LEVEL_45_PALADIN_CHEST = new Chest();\r\n    Chest LEVEL_55_PALADIN_CHEST = new Chest();\r\n    Chest LEVEL_60_PALADIN_CHEST = new Chest();\r\n\r\n    @Test\r\n    void chestGeneratesWeaponWithDamageBasedOnLevelForMages() {\r\n        LEVEL_5_MAGE_CHEST.generateItems(LEVEL_5_MAGE);\r\n        Weapon LEVEL_5_MAGE_WEAPON = (Weapon) LEVEL_5_MAGE_CHEST.getItems().get(3);\r\n        assertEquals(5, LEVEL_5_MAGE_WEAPON.getDamage());\r\n\r\n        LEVEL_15_MAGE_CHEST.generateItems(LEVEL_15_MAGE);\r\n        Weapon LEVEL_15_MAGE_WEAPON = (Weapon) LEVEL_15_MAGE_CHEST.getItems().get(3);\r\n        assertEquals(10, LEVEL_15_MAGE_WEAPON.getDamage());\r\n\r\n        LEVEL_25_MAGE_CHEST.generateItems(LEVEL_25_MAGE);\r\n        Weapon LEVEL_25_MAGE_WEAPON = (Weapon) LEVEL_25_MAGE_CHEST.getItems().get(3);\r\n        assertEquals(20, LEVEL_25_MAGE_WEAPON.getDamage());\r\n\r\n        LEVEL_35_MAGE_CHEST.generateItems(LEVEL_35_MAGE);\r\n        Weapon LEVEL_35_MAGE_WEAPON = (Weapon) LEVEL_35_MAGE_CHEST.getItems().get(3);\r\n        assertEquals(30, LEVEL_35_MAGE_WEAPON.getDamage());\r\n\r\n        LEVEL_45_MAGE_CHEST.generateItems(LEVEL_45_MAGE);\r\n        Weapon LEVEL_45_MAGE_WEAPON = (Weapon) LEVEL_45_MAGE_CHEST.getItems().get(3);\r\n        assertEquals(40, LEVEL_45_MAGE_WEAPON.getDamage());\r\n\r\n        LEVEL_55_MAGE_CHEST.generateItems(LEVEL_55_MAGE);\r\n        Weapon LEVEL_55_MAGE_WEAPON = (Weapon) LEVEL_55_MAGE_CHEST.getItems().get(3);\r\n        assertEquals(50, LEVEL_55_MAGE_WEAPON.getDamage());\r\n\r\n        LEVEL_60_MAGE_CHEST.generateItems(LEVEL_60_MAGE);\r\n        Weapon LEVEL_60_MAGE_WEAPON = (Weapon) LEVEL_60_MAGE_CHEST.getItems().get(3);\r\n        assertEquals(60, LEVEL_60_MAGE_WEAPON.getDamage());\r\n    }\r\n\r\n    @Test\r\n    void chestGeneratesLightArmorWithArmorRatingBasedOnLevelForMages() {\r\n        LEVEL_5_MAGE_CHEST.generateItems(LEVEL_5_MAGE);\r\n        Armor LEVEL_5_MAGE_ARMOR = (Armor) LEVEL_5_MAGE_CHEST.getItems().get(4);\r\n        assertEquals(5, LEVEL_5_MAGE_ARMOR.getArmorRating());\r\n\r\n        LEVEL_15_MAGE_CHEST.generateItems(LEVEL_15_MAGE);\r\n        Armor LEVEL_15_MAGE_ARMOR = (Armor) LEVEL_15_MAGE_CHEST.getItems().get(4);\r\n        assertEquals(10, LEVEL_15_MAGE_ARMOR.getArmorRating());\r\n\r\n        LEVEL_25_MAGE_CHEST.generateItems(LEVEL_25_MAGE);\r\n        Armor LEVEL_25_MAGE_ARMOR = (Armor) LEVEL_25_MAGE_CHEST.getItems().get(4);\r\n        assertEquals(20, LEVEL_25_MAGE_ARMOR.getArmorRating());\r\n\r\n        LEVEL_35_MAGE_CHEST.generateItems(LEVEL_35_MAGE);\r\n        Armor LEVEL_35_MAGE_ARMOR = (Armor) LEVEL_35_MAGE_CHEST.getItems().get(4);\r\n        assertEquals(30, LEVEL_35_MAGE_ARMOR.getArmorRating());\r\n\r\n        LEVEL_45_MAGE_CHEST.generateItems(LEVEL_45_MAGE);\r\n        Armor LEVEL_45_MAGE_ARMOR = (Armor) LEVEL_45_MAGE_CHEST.getItems().get(4);\r\n        assertEquals(40, LEVEL_45_MAGE_ARMOR.getArmorRating());\r\n\r\n        LEVEL_55_MAGE_CHEST.generateItems(LEVEL_55_MAGE);\r\n        Armor LEVEL_55_MAGE_ARMOR = (Armor) LEVEL_55_MAGE_CHEST.getItems().get(4);\r\n        assertEquals(50, LEVEL_55_MAGE_ARMOR.getArmorRating());\r\n\r\n        LEVEL_60_MAGE_CHEST.generateItems(LEVEL_60_MAGE);\r\n        Armor LEVEL_60_MAGE_ARMOR = (Armor) LEVEL_60_MAGE_CHEST.getItems().get(4);\r\n        assertEquals(60, LEVEL_60_MAGE_ARMOR.getArmorRating());\r\n    }\r\n\r\n    @Test\r\n    void chestGeneratesWeaponWithDamageBasedOnLevelForPaladins() {\r\n        LEVEL_5_PALADIN_CHEST.generateItems(LEVEL_5_PALADIN);\r\n        Weapon LEVEL_5_PALADIN_WEAPON = (Weapon) LEVEL_5_PALADIN_CHEST.getItems().get(3);\r\n        assertEquals(5, LEVEL_5_PALADIN_WEAPON.getDamage());\r\n\r\n        LEVEL_15_PALADIN_CHEST.generateItems(LEVEL_15_PALADIN);\r\n        Weapon LEVEL_15_PALADIN_WEAPON = (Weapon) LEVEL_15_PALADIN_CHEST.getItems().get(3);\r\n        assertEquals(10, LEVEL_15_PALADIN_WEAPON.getDamage());\r\n\r\n        LEVEL_25_PALADIN_CHEST.generateItems(LEVEL_25_PALADIN);\r\n        Weapon LEVEL_25_PALADIN_WEAPON = (Weapon) LEVEL_25_PALADIN_CHEST.getItems().get(3);\r\n        assertEquals(20, LEVEL_25_PALADIN_WEAPON.getDamage());\r\n\r\n        LEVEL_35_PALADIN_CHEST.generateItems(LEVEL_35_PALADIN);\r\n        Weapon LEVEL_35_PALADIN_WEAPON = (Weapon) LEVEL_35_PALADIN_CHEST.getItems().get(3);\r\n        assertEquals(30, LEVEL_35_PALADIN_WEAPON.getDamage());\r\n\r\n        LEVEL_45_PALADIN_CHEST.generateItems(LEVEL_45_PALADIN);\r\n        Weapon LEVEL_45_PALADIN_WEAPON = (Weapon) LEVEL_45_PALADIN_CHEST.getItems().get(3);\r\n        assertEquals(40, LEVEL_45_PALADIN_WEAPON.getDamage());\r\n\r\n        LEVEL_55_PALADIN_CHEST.generateItems(LEVEL_55_PALADIN);\r\n        Weapon LEVEL_55_PALADIN_WEAPON = (Weapon) LEVEL_55_PALADIN_CHEST.getItems().get(3);\r\n        assertEquals(50, LEVEL_55_PALADIN_WEAPON.getDamage());\r\n\r\n        LEVEL_60_PALADIN_CHEST.generateItems(LEVEL_60_PALADIN);\r\n        Weapon LEVEL_60_PALADIN_WEAPON = (Weapon) LEVEL_60_PALADIN_CHEST.getItems().get(3);\r\n        assertEquals(60, LEVEL_60_PALADIN_WEAPON.getDamage());\r\n    }\r\n\r\n    @Test\r\n    void generatedChestHas5Items() {\r\n        LEVEL_25_MAGE_CHEST.generateItems(LEVEL_25_MAGE);\r\n        assertEquals(5, LEVEL_25_MAGE_CHEST.getItems().size());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/inte/grupp5/item/ChestTest.java	(revision 9f1e77dda7e1460cb81fd69911ae4c78f7e58faf)
+++ src/test/java/inte/grupp5/item/ChestTest.java	(date 1603458453001)
@@ -2,7 +2,10 @@
 
 import inte.grupp5.player.Player;
 import inte.grupp5.player.classes.Mage;
+<<<<<<< HEAD
 import inte.grupp5.player.classes.Paladin;
+=======
+>>>>>>> de49bb0... Merged with Player.development. Chest test and class implementation.
 import org.junit.jupiter.api.Test;
 
 import static org.junit.jupiter.api.Assertions.*;
@@ -12,7 +15,10 @@
 public class ChestTest {
 
     Mage MAGE = new Mage("Gandalf");
+<<<<<<< HEAD
     Paladin PALADIN = new Paladin("Paladin");
+=======
+>>>>>>> de49bb0... Merged with Player.development. Chest test and class implementation.
 
     Player LEVEL_5_MAGE = new Player("Level 5", MAGE, 5);
     Player LEVEL_15_MAGE = new Player("Level 15", MAGE, 15);
@@ -22,6 +28,7 @@
     Player LEVEL_55_MAGE = new Player("Level 55", MAGE, 55);
     Player LEVEL_60_MAGE = new Player("Level 60", MAGE, 60);
 
+<<<<<<< HEAD
     Player LEVEL_5_PALADIN = new Player("Level 5", PALADIN, 5);
     Player LEVEL_15_PALADIN = new Player("Level 15", PALADIN, 15);
     Player LEVEL_25_PALADIN = new Player("Level 25", PALADIN, 25);
@@ -30,6 +37,8 @@
     Player LEVEL_55_PALADIN = new Player("Level 55", PALADIN, 55);
     Player LEVEL_60_PALADIN = new Player("Level 60", PALADIN, 60);
 
+=======
+>>>>>>> de49bb0... Merged with Player.development. Chest test and class implementation.
     Chest LEVEL_5_MAGE_CHEST = new Chest();
     Chest LEVEL_15_MAGE_CHEST = new Chest();
     Chest LEVEL_25_MAGE_CHEST = new Chest();
@@ -38,6 +47,7 @@
     Chest LEVEL_55_MAGE_CHEST = new Chest();
     Chest LEVEL_60_MAGE_CHEST = new Chest();
 
+<<<<<<< HEAD
     Chest LEVEL_5_PALADIN_CHEST = new Chest();
     Chest LEVEL_15_PALADIN_CHEST = new Chest();
     Chest LEVEL_25_PALADIN_CHEST = new Chest();
@@ -143,5 +153,38 @@
     void generatedChestHas5Items() {
         LEVEL_25_MAGE_CHEST.generateItems(LEVEL_25_MAGE);
         assertEquals(5, LEVEL_25_MAGE_CHEST.getItems().size());
+=======
+    @Test
+    void chestGeneratesWeaponWithDamageBasedOnLevelForMages() {
+        LEVEL_5_MAGE_CHEST.generateItems(LEVEL_5_MAGE);
+        assertEquals("[Name: Staff, Weight: 3.00, Damage: 5, Weapon type: STAFF]", LEVEL_5_MAGE_CHEST.getItems().get(3).toString());
+        // TODO: Workaround to check damage, since value is calculated by adding damage and weight.
+        assertEquals(8, LEVEL_5_MAGE_CHEST.getItems().get(3).getValue());
+
+
+        LEVEL_15_MAGE_CHEST.generateItems(LEVEL_15_MAGE);
+        assertEquals("[Name: Staff, Weight: 3.00, Damage: 10, Weapon type: STAFF]", LEVEL_15_MAGE_CHEST.getItems().get(3).toString());
+
+        LEVEL_25_MAGE_CHEST.generateItems(LEVEL_25_MAGE);
+        assertEquals("[Name: Staff, Weight: 3.00, Damage: 20, Weapon type: STAFF]", LEVEL_25_MAGE_CHEST.getItems().get(3).toString());
+
+        LEVEL_35_MAGE_CHEST.generateItems(LEVEL_35_MAGE);
+        assertEquals("[Name: Staff, Weight: 3.00, Damage: 30, Weapon type: STAFF]", LEVEL_35_MAGE_CHEST.getItems().get(3).toString());
+
+        LEVEL_45_MAGE_CHEST.generateItems(LEVEL_45_MAGE);
+        assertEquals("[Name: Staff, Weight: 3.00, Damage: 40, Weapon type: STAFF]", LEVEL_45_MAGE_CHEST.getItems().get(3).toString());
+
+        LEVEL_55_MAGE_CHEST.generateItems(LEVEL_55_MAGE);
+        assertEquals("[Name: Staff, Weight: 3.00, Damage: 50, Weapon type: STAFF]", LEVEL_55_MAGE_CHEST.getItems().get(3).toString());
+
+        LEVEL_60_MAGE_CHEST.generateItems(LEVEL_60_MAGE);
+        assertEquals("[Name: Staff, Weight: 3.00, Damage: 60, Weapon type: STAFF]", LEVEL_60_MAGE_CHEST.getItems().get(3).toString());
+    }
+
+    @Test
+    void generatedChestHas4ItemsForMages() {
+        LEVEL_25_MAGE_CHEST.generateItems(LEVEL_25_MAGE);
+        assertEquals(4, LEVEL_25_MAGE_CHEST.getItems().size());
+>>>>>>> de49bb0... Merged with Player.development. Chest test and class implementation.
     }
 }
Index: src/main/java/inte/grupp5/item/Chest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package inte.grupp5.item;\r\n\r\nimport inte.grupp5.player.Player;\r\nimport inte.grupp5.player.classes.Mage;\r\nimport inte.grupp5.player.classes.Paladin;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Chest {\r\n\r\n    private ArrayList<Item> items = new ArrayList<>();\r\n\r\n    // TODO: Implement for all the Player Classes.\r\n    public void generateItems(Player player) {\r\n\r\n        // Variable declaration\r\n        int WEAPON_DMG_LVL_1 = 5;\r\n        int WEAPON_DMG_LVL_10 = 10;\r\n        int WEAPON_DMG_LVL_20 = 20;\r\n        int WEAPON_DMG_LVL_30 = 30;\r\n        int WEAPON_DMG_LVL_40 = 40;\r\n        int WEAPON_DMG_LVL_50 = 50;\r\n        int WEAPON_DMG_LVL_60 = 60;\r\n\r\n        int SWORD_WEIGHT = 5;\r\n        int STAFF_WEIGHT = 3;\r\n        int BOW_WEIGHT = 3;\r\n\r\n        int LIGHT_ARMOR_WEIGHT = 7;\r\n        int HEAVY_ARMOR_WEIGHT = 10;\r\n\r\n        int LGT_ARM_RTG_LVL_1 = 5;\r\n        int LGT_ARM_RTG_LVL_10 = 10;\r\n        int LGT_ARM_RTG_LVL_20 = 20;\r\n        int LGT_ARM_RTG_LVL_30 = 30;\r\n        int LGT_ARM_RTG_LVL_40 = 40;\r\n        int LGT_ARM_RTG_LVL_50 = 50;\r\n        int LGT_ARM_RTG_LVL_60 = 60;\r\n\r\n        int HVY_ARM_RTG_LVL_1 = 10;\r\n        int HVY_ARM_RTG_LVL_10 = 20;\r\n        int HVY_ARM_RTG_LVL_20 = 30;\r\n        int HVY_ARM_RTG_LVL_30 = 40;\r\n        int HVY_ARM_RTG_LVL_40 = 50;\r\n        int HVY_ARM_RTG_LVL_50 = 60;\r\n        int HVY_ARM_RTG_LVL_60 = 70;\r\n\r\n        String SWORD_STR = \"Sword\";\r\n        String BOW_STR = \"Bow\";\r\n        String STAFF_STR = \"Staff\";\r\n\r\n        String MANA_POTION_STR = \"Mana potion\";\r\n        String HEALTH_POTION_STR = \"Health potion\";\r\n        String LEVEL_POTION_STR = \"Level potion\";\r\n\r\n        String LIGHT_ARMOR_STR = \"Light armor\";\r\n        String HEAVY_ARMOR_STR = \"Heavy armor\";\r\n\r\n        // Adds a health potion and a level potion to every chest.\r\n        items.add(new Potion(HEALTH_POTION_STR, 2, Potion.PotionType.HEALTH_POTION));\r\n        items.add(new Potion(LEVEL_POTION_STR, 1, Potion.PotionType.LEVEL_POTION));\r\n\r\n        if (player.getKlass() instanceof Mage) {\r\n\r\n            // Every chest has a mana potion when you are a mage.\r\n            items.add(new Potion(MANA_POTION_STR, 2, Potion.PotionType.MANA_POTION));\r\n\r\n            // Based on player level, adds Staff with different damage,\r\n            // and Light armor with different armor rating.\r\n            if (player.getLevel() <= 10) {\r\n                items.add(new Weapon\r\n                        (STAFF_STR, STAFF_WEIGHT, WEAPON_DMG_LVL_1, Weapon.WeaponType.STAFF));\r\n                items.add(new Armor\r\n                        (LIGHT_ARMOR_STR, LIGHT_ARMOR_WEIGHT, LGT_ARM_RTG_LVL_1, Armor.ArmorType.LIGHT_ARMOR));\r\n            } else if (player.getLevel() > 10 && player.getLevel() <= 20) {\r\n                items.add(new Weapon\r\n                        (STAFF_STR, STAFF_WEIGHT, WEAPON_DMG_LVL_10, Weapon.WeaponType.STAFF));\r\n                items.add(new Armor\r\n                        (LIGHT_ARMOR_STR, LIGHT_ARMOR_WEIGHT, LGT_ARM_RTG_LVL_10, Armor.ArmorType.LIGHT_ARMOR));\r\n            } else if (player.getLevel() > 20 && player.getLevel() <= 30) {\r\n                items.add(new Weapon\r\n                        (STAFF_STR, STAFF_WEIGHT, WEAPON_DMG_LVL_20, Weapon.WeaponType.STAFF));\r\n                items.add(new Armor\r\n                        (LIGHT_ARMOR_STR, LIGHT_ARMOR_WEIGHT, LGT_ARM_RTG_LVL_20, Armor.ArmorType.LIGHT_ARMOR));\r\n            } else if (player.getLevel() > 30 && player.getLevel() <= 40) {\r\n                items.add(new Weapon\r\n                        (STAFF_STR, STAFF_WEIGHT, WEAPON_DMG_LVL_30, Weapon.WeaponType.STAFF));\r\n                items.add(new Armor\r\n                        (LIGHT_ARMOR_STR, LIGHT_ARMOR_WEIGHT, LGT_ARM_RTG_LVL_30, Armor.ArmorType.LIGHT_ARMOR));\r\n            } else if (player.getLevel() > 40 && player.getLevel() <= 50) {\r\n                items.add(new Weapon\r\n                        (STAFF_STR, STAFF_WEIGHT, WEAPON_DMG_LVL_40, Weapon.WeaponType.STAFF));\r\n                items.add(new Armor\r\n                        (LIGHT_ARMOR_STR, LIGHT_ARMOR_WEIGHT, LGT_ARM_RTG_LVL_40, Armor.ArmorType.LIGHT_ARMOR));\r\n            } else if (player.getLevel() > 50 && player.getLevel() < 60) {\r\n                items.add(new Weapon\r\n                        (STAFF_STR, STAFF_WEIGHT, WEAPON_DMG_LVL_50, Weapon.WeaponType.STAFF));\r\n                items.add(new Armor\r\n                        (LIGHT_ARMOR_STR, LIGHT_ARMOR_WEIGHT, LGT_ARM_RTG_LVL_50, Armor.ArmorType.LIGHT_ARMOR));\r\n            } else if (player.getLevel() == 60) {\r\n                items.add(new Weapon\r\n                        (STAFF_STR, STAFF_WEIGHT, WEAPON_DMG_LVL_60, Weapon.WeaponType.STAFF));\r\n                items.add(new Armor\r\n                        (LIGHT_ARMOR_STR, LIGHT_ARMOR_WEIGHT, LGT_ARM_RTG_LVL_60, Armor.ArmorType.LIGHT_ARMOR));\r\n            }\r\n        } else if (player.getKlass() instanceof Paladin) {\r\n            // Adds extra health potion if you are not a mage.\r\n            items.add(new Potion(HEALTH_POTION_STR, 2, Potion.PotionType.HEALTH_POTION));\r\n\r\n            // Based on player level, adds Sword with different damage,\r\n            // and Heavy armor with different armor rating.\r\n            if (player.getLevel() <= 10) {\r\n                items.add(new Weapon\r\n                        (SWORD_STR, SWORD_WEIGHT, WEAPON_DMG_LVL_1, Weapon.WeaponType.SWORD));\r\n                items.add(new Armor(HEAVY_ARMOR_STR, HEAVY_ARMOR_WEIGHT, HVY_ARM_RTG_LVL_1, Armor.ArmorType.HEAVY_ARMOR));\r\n            } else if (player.getLevel() > 10 && player.getLevel() <= 20) {\r\n                items.add(new Weapon\r\n                        (SWORD_STR, SWORD_WEIGHT, WEAPON_DMG_LVL_10, Weapon.WeaponType.SWORD));\r\n                items.add(new Armor(HEAVY_ARMOR_STR, HEAVY_ARMOR_WEIGHT, HVY_ARM_RTG_LVL_10, Armor.ArmorType.HEAVY_ARMOR));\r\n            } else if (player.getLevel() > 20 && player.getLevel() <= 30) {\r\n                items.add(new Weapon\r\n                        (SWORD_STR, SWORD_WEIGHT, WEAPON_DMG_LVL_20, Weapon.WeaponType.SWORD));\r\n                items.add(new Armor(HEAVY_ARMOR_STR, HEAVY_ARMOR_WEIGHT, HVY_ARM_RTG_LVL_20, Armor.ArmorType.HEAVY_ARMOR));\r\n            } else if (player.getLevel() > 30 && player.getLevel() <= 40) {\r\n                items.add(new Weapon\r\n                        (SWORD_STR, SWORD_WEIGHT, WEAPON_DMG_LVL_30, Weapon.WeaponType.SWORD));\r\n                items.add(new Armor(HEAVY_ARMOR_STR, HEAVY_ARMOR_WEIGHT, HVY_ARM_RTG_LVL_30, Armor.ArmorType.HEAVY_ARMOR));\r\n            } else if (player.getLevel() > 40 && player.getLevel() <= 50) {\r\n                items.add(new Weapon\r\n                        (SWORD_STR, SWORD_WEIGHT, WEAPON_DMG_LVL_40, Weapon.WeaponType.SWORD));\r\n                items.add(new Armor(HEAVY_ARMOR_STR, HEAVY_ARMOR_WEIGHT, HVY_ARM_RTG_LVL_40, Armor.ArmorType.HEAVY_ARMOR));\r\n            } else if (player.getLevel() > 50 && player.getLevel() < 60) {\r\n                items.add(new Weapon\r\n                        (SWORD_STR, SWORD_WEIGHT, WEAPON_DMG_LVL_50, Weapon.WeaponType.SWORD));\r\n                items.add(new Armor(HEAVY_ARMOR_STR, HEAVY_ARMOR_WEIGHT, HVY_ARM_RTG_LVL_50, Armor.ArmorType.HEAVY_ARMOR));\r\n            } else if (player.getLevel() == 60) {\r\n                items.add(new Weapon\r\n                        (SWORD_STR, SWORD_WEIGHT, WEAPON_DMG_LVL_60, Weapon.WeaponType.SWORD));\r\n                items.add(new Armor(HEAVY_ARMOR_STR, HEAVY_ARMOR_WEIGHT, HVY_ARM_RTG_LVL_60, Armor.ArmorType.HEAVY_ARMOR));\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: This method should be in the Player class.\r\n    public ArrayList<Item> openChest(Player player) {\r\n        generateItems(player);\r\n        return getItems();\r\n    }\r\n\r\n    // Todo: This method is public until openChest() gets implemented in Player.\r\n    public ArrayList<Item> getItems() {\r\n        return items;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/inte/grupp5/item/Chest.java	(revision 9f1e77dda7e1460cb81fd69911ae4c78f7e58faf)
+++ src/main/java/inte/grupp5/item/Chest.java	(date 1603458452648)
@@ -2,7 +2,10 @@
 
 import inte.grupp5.player.Player;
 import inte.grupp5.player.classes.Mage;
+<<<<<<< HEAD
 import inte.grupp5.player.classes.Paladin;
+=======
+>>>>>>> de49bb0... Merged with Player.development. Chest test and class implementation.
 
 import java.util.ArrayList;
 
@@ -12,8 +15,11 @@
 
     // TODO: Implement for all the Player Classes.
     public void generateItems(Player player) {
+<<<<<<< HEAD
 
         // Variable declaration
+=======
+>>>>>>> de49bb0... Merged with Player.development. Chest test and class implementation.
         int WEAPON_DMG_LVL_1 = 5;
         int WEAPON_DMG_LVL_10 = 10;
         int WEAPON_DMG_LVL_20 = 20;
@@ -69,6 +75,7 @@
             // and Light armor with different armor rating.
             if (player.getLevel() <= 10) {
                 items.add(new Weapon
+<<<<<<< HEAD
                         (STAFF_STR, STAFF_WEIGHT, WEAPON_DMG_LVL_1, Weapon.WeaponType.STAFF));
                 items.add(new Armor
                         (LIGHT_ARMOR_STR, LIGHT_ARMOR_WEIGHT, LGT_ARM_RTG_LVL_1, Armor.ArmorType.LIGHT_ARMOR));
@@ -97,6 +104,24 @@
                         (STAFF_STR, STAFF_WEIGHT, WEAPON_DMG_LVL_50, Weapon.WeaponType.STAFF));
                 items.add(new Armor
                         (LIGHT_ARMOR_STR, LIGHT_ARMOR_WEIGHT, LGT_ARM_RTG_LVL_50, Armor.ArmorType.LIGHT_ARMOR));
+=======
+                        (STAFF, STAFF_WEIGHT, WEAPON_DMG_LVL_1, Weapon.WeaponType.STAFF));
+            } else if (player.getLevel() > 10 && player.getLevel() <= 20) {
+                items.add(new Weapon
+                        (STAFF, STAFF_WEIGHT, WEAPON_DMG_LVL_10, Weapon.WeaponType.STAFF));
+            } else if (player.getLevel() > 20 && player.getLevel() <= 30) {
+                items.add(new Weapon
+                        (STAFF, STAFF_WEIGHT, WEAPON_DMG_LVL_20, Weapon.WeaponType.STAFF));
+            } else if (player.getLevel() > 30 && player.getLevel() <= 40) {
+                items.add(new Weapon
+                        (STAFF, STAFF_WEIGHT, WEAPON_DMG_LVL_30, Weapon.WeaponType.STAFF));
+            } else if (player.getLevel() > 40 && player.getLevel() <= 50) {
+                items.add(new Weapon
+                        (STAFF, STAFF_WEIGHT, WEAPON_DMG_LVL_40, Weapon.WeaponType.STAFF));
+            } else if (player.getLevel() > 50 && player.getLevel() < 60) {
+                items.add(new Weapon
+                        (STAFF, STAFF_WEIGHT, WEAPON_DMG_LVL_50, Weapon.WeaponType.STAFF));
+>>>>>>> de49bb0... Merged with Player.development. Chest test and class implementation.
             } else if (player.getLevel() == 60) {
                 items.add(new Weapon
                         (STAFF_STR, STAFF_WEIGHT, WEAPON_DMG_LVL_60, Weapon.WeaponType.STAFF));
@@ -148,6 +173,10 @@
     }
 
     // Todo: This method is public until openChest() gets implemented in Player.
+<<<<<<< HEAD
+=======
+    //  Change to private when that happens.
+>>>>>>> de49bb0... Merged with Player.development. Chest test and class implementation.
     public ArrayList<Item> getItems() {
         return items;
     }
